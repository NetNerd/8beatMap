<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{325A5CC3-82F9-435B-829A-DC8DD4A7BA16}</ProjectGuid>
    <OutputType>WinExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>_8beatMap</RootNamespace>
    <AssemblyName>8beatMap</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowedReferenceRelatedFileExtensions>
      .pdb;
      .pri
    </AllowedReferenceRelatedFileExtensions>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowedReferenceRelatedFileExtensions>
      .pdb;
      .pri
    </AllowedReferenceRelatedFileExtensions>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationIcon>8beatMap.ico</ApplicationIcon>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="NAudio, Version=1.8.5.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\NAudio.1.8.5\lib\net35\NAudio.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json, Version=9.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>..\packages\Newtonsoft.Json.9.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="OpenTK, Version=2.0.0.0, Culture=neutral, PublicKeyToken=bad199fe84eb3df4, processorArchitecture=MSIL">
      <HintPath>..\packages\OpenTK.2.0.0\lib\net20\OpenTK.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Deployment" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="BMFontReader.cs" />
    <Compile Include="BMFontReaderBinaryParts.cs" />
    <Compile Include="CharaIconDialog.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="CharaIconDialog.Designer.cs">
      <DependentUpon>CharaIconDialog.cs</DependentUpon>
    </Compile>
    <Compile Include="OpenTkBMFontRenderer.cs" />
    <Compile Include="OpenTkTextureFuncs.cs" />
    <Compile Include="SkinnedMessageBox.cs" />
    <Compile Include="ChartInfoDialog.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="ChartInfoDialog.Designer.cs">
      <DependentUpon>ChartInfoDialog.cs</DependentUpon>
    </Compile>
    <Compile Include="Dialogs.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Dialogs.resx</DependentUpon>
    </Compile>
    <Compile Include="UIColours.cs" />
    <Compile Include="Form1.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="Form1.Designer.cs">
      <DependentUpon>Form1.cs</DependentUpon>
    </Compile>
    <Compile Include="GameCloneRenderer_OGL.cs" />
    <Compile Include="Notedata.cs" />
    <Compile Include="NotetypeNames.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>NotetypeNames.resx</DependentUpon>
    </Compile>
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Skinning.cs" />
    <Compile Include="Sound.cs" />
    <EmbeddedResource Include="CharaIconDialog.resx">
      <DependentUpon>CharaIconDialog.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="ChartInfoDialog.ja.resx">
      <DependentUpon>ChartInfoDialog.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="ChartInfoDialog.resx">
      <DependentUpon>ChartInfoDialog.cs</DependentUpon>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="Dialogs.ja.resx" />
    <EmbeddedResource Include="Dialogs.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Dialogs.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Include="Form1.ja.resx">
      <DependentUpon>Form1.cs</DependentUpon>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="Form1.resx">
      <DependentUpon>Form1.cs</DependentUpon>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="GameCloneRenderer_OGL.resx">
      <DependentUpon>GameCloneRenderer_OGL.cs</DependentUpon>
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>GameCloneRenderer_OGL.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Include="NotetypeNames.ja.resx" />
    <EmbeddedResource Include="NotetypeNames.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>NotetypeNames.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="Notetypes.cs" />
    <None Include="app.config" />
    <None Include="OpenTK.dll.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Content Include="8beatMap.ico" />
    <None Include="8beatMapPreview.ico" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Target Name="GetGitHash" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == ''">
    <PropertyGroup>
      <!-- temp file for the git version (lives in "obj" folder)-->
      <VerFile>$(IntermediateOutputPath)gitver</VerFile>
    </PropertyGroup>
    <!-- get current commit hash to GitVersion -->
    <Exec Command="git describe --long --always --dirty" IgnoreExitCode="true" ConsoleToMsBuild="true">
      <Output TaskParameter="ConsoleOutput" ItemName="GitVersion" />
      <Output TaskParameter="ExitCode" ItemName="GitVersionExitCode" />
    </Exec>
    <!-- get HEAD's fork point from master to GitCountCommit -->
    <Exec Command="git merge-base master HEAD" IgnoreExitCode="true" ConsoleToMsBuild="true">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCountCommit" />
      <Output TaskParameter="ExitCode" ItemName="GitCountCommitExitCode" />
    </Exec>
    <!-- get revision number to GitCount -->
    <Exec Command="git rev-list --count --first-parent @(GitCountCommit)" IgnoreExitCode="true" ConsoleToMsBuild="true" Condition="'@(GitCountCommitExitCode)' == 0">
      <Output TaskParameter="ConsoleOutput" ItemName="GitCount" />
      <Output TaskParameter="ExitCode" ItemName="GitCountExitCode" />
    </Exec>
    <!-- get branch to GitBranch -->
    <Exec Command="git rev-parse --abbrev-ref HEAD" IgnoreExitCode="true" ConsoleToMsBuild="true">
      <Output TaskParameter="ConsoleOutput" ItemName="GitBranch" />
      <Output TaskParameter="ExitCode" ItemName="GitBranchExitCode" />
    </Exec>
    <!-- set properties to our git info, if it wasn't already set -->
    <PropertyGroup>
      <BuildHash Condition="'@(GitVersionExitCode)' == 0">@(GitVersion)</BuildHash>
      <BuildRevision Condition="'@(GitCountExitCode)' == 0">@(GitCount)</BuildRevision>
      <BuildBranch Condition="'@(GitBranchExitCode)' == 0">@(GitBranch)</BuildBranch>
    </PropertyGroup>
    <ItemGroup>
      <BuildVersion Condition="'$(BuildRevision)' != ''" Include="1.0.0.$(BuildRevision)" />
      <BuildVersion Condition="'$(BuildRevision)' == ''" Include="1.0.0" />
      <BuildVersionDetail Condition="'$(BuildBranch)' != '' And '$(BuildHash)' != ''" Include="$(BuildBranch)-$(BuildHash)" />
      <BuildVersionDetail Condition="'$(BuildBranch)' != '' And '$(BuildHash)' == ''" Include="$(BuildBranch)" />
      <BuildVersionDetail Condition="'$(BuildBranch)' == '' And '$(BuildHash)' != ''" Include="$(BuildHash)" />
    </ItemGroup>
  </Target>
  <Target Name="WriteGitHash" BeforeTargets="CoreCompile">
    <!-- names the obj/.../CustomAssemblyInfo.cs file -->
    <PropertyGroup>
      <CustomAssemblyInfoFile>$(IntermediateOutputPath)CustomAssemblyInfo.cs</CustomAssemblyInfoFile>
    </PropertyGroup>
    <!-- includes the CustomAssemblyInfo for compilation into your project -->
    <ItemGroup>
      <Compile Include="$(CustomAssemblyInfoFile)" />
    </ItemGroup>
    <!-- defines the AssemblyInformationalVersion attribute that will be written -->
    <ItemGroup>
      <AssemblyAttributes Include="AssemblyInformationalVersion" Condition="'@(BuildVersionDetail)' != ''">
        <_Parameter1>@(BuildVersionDetail)</_Parameter1>
      </AssemblyAttributes>
      <AssemblyAttributes Include="AssemblyVersion">
        <_Parameter1>@(BuildVersion)</_Parameter1>
      </AssemblyAttributes>
    </ItemGroup>
    <!-- writes the attribute to the customAssemblyInfo file -->
    <WriteCodeFragment Language="C#" OutputFile="$(CustomAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttributes)" />
  </Target>
  <PropertyGroup>
    <PostBuildEventDependsOn>
      $(PostBuildEventDependsOn);
      GetGitHash;
    </PostBuildEventDependsOn>
    <ZipfileDir>zips</ZipfileDir>
    <ZipfileName>8beatMap.@(BuildVersion)-@(BuildVersionDetail)-$(ConfigurationName).zip</ZipfileName>
    <PostBuildEvent>echo Removing old dirty build outputs...
echo (Move previous build of current version to a temp directory)
mkdir "$(ZipfileDir)/tmp"
mv $(ZipfileDir)/$(ZipfileName) $(ZipfileDir)/tmp/
echo (Delete old files)
rm $(ZipfileDir)/8beatMap*-dirty-$(ConfigurationName).zip
echo (Move build from temp directory back to zips directory)
mv $(ZipfileDir)/tmp/$(ZipfileName) $(ZipfileDir)/
rmdir "$(ZipfileDir)/tmp"
echo Copying readme and license to output directory...
cp ../../../readme.md readme.txt
cp ../../../license.txt license.txt
echo Updating zip files...
7z u "$(ZipfileDir)/$(ZipfileName)" 8beatMap.exe 8beatMap.pdb NAudio.dll Newtonsoft.Json.dll OpenTK.dll OpenTK.dll.config ja readme.txt license.txt ../../skin*/8bs -xr!*.psd
7z u "$(ZipfileDir)/skins.zip" ../../skins -xr!*.psd</PostBuildEvent>
  </PropertyGroup>
</Project>